---
- hosts: [all]
  become: true
  vars_files:
    - group_vars/debian.yml

  vars_prompt:
    - name: "user_name"
      prompt: Desired username?
      private: false

    - name: "hostname"
      prompt: Desired hostname?
      private: false

    - name: "ssh_port"
      prompt: Desired SSH Port?
      private: false

  vars:
    timezone: America/Chicago

  tasks:
    - name: Update Apt.
      apt: name=aptitude update_cache=true state=latest force_apt_get=true

    - name: Verify admin group exists
      group:
        name: "{{ admin_group | default('sudo') }}"
        state: present

    - name: Allow passwordless sudo to admin group
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: "^%{{ admin_group | default('sudo') }}"
        line: "%{{ admin_group | default('sudo') }} ALL=(ALL) NOPASSWD: ALL"
        validate: "/usr/sbin/visudo -cf %s"
      when: allow_passwordless_sudo | default(false)

    - name: "Create User"
      ansible.builtin.user:
        name: "{{ user_name }}"
        state: present
        groups: "{{ admin_group | default('sudo') }}"
        append: true
        create_home: true
        shell: /usr/bin/zsh

    - name: Print message.
      ansible.builtin.debug:
        msg: 'Setting hostname to: {{ hostname }}'

    - name: "Set a hostname"
      hostname:
        name: "{{ hostname }}"

    - name: "Apt Update"
      apt:
        update_cache: true
        cache_valid_time: 3600

    - name: "Apt Upgrade"
      apt:
        upgrade: true

    - name: "Install Default Packages"
      package:
        name: "{{ apt_packages }}"
        state: latest

    - name: "Remove ubuntu spyware"
      apt:
        name: popularity-contest
        state: absent

    - name: "Check Reboot"
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: "Reboot Conditional"
      reboot:
        msg: "Reboot initiated by Ansible because of reboot required file."
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami
      when: reboot_required.stat.exists

    - name: "Purge Apt Cache"
      apt:
        autoclean: true

    - name: "Remove Stale Dependencies."
      apt:
        autoremove: true
        purge: true

    - name: "Copy Dotfiles"
      copy:
        dest: /home/{{ user_name }}/
        src: ../roles/common/files/home/
        owner: "{{ user_name }}"
        group: "{{ user_name }}"

    - name: "Delete MOTD"
      file:
        path: /etc/update-motd.d/
        state: absent

    - name: "Create MOTD"
      file:
        path: /etc/update-motd.d/
        state: directory

    - name: "Setup MOTD"
      copy:
        dest: /etc/update-motd.d/10-motd
        src: ../roles/common/files/etc/update-motd.d/10-motd
        owner: root
        group: root
        mode: a+x

    - name: "UFW Allow SSH"
      community.general.ufw:
        rule: allow
        port: "{{ ssh_port }}"

    - name: "UFW Deny All"
      community.general.ufw:
        state: enabled
        policy: deny
        direction: incoming

    - name: "SSH Key Exchange."
      ansible.posix.authorized_key:
        user: "{{ user_name }}"
        state: present
        key: "{{ copy_pub_key }}"

    - name: "Add SSH Config"
      ansible.builtin.copy:
        dest: /etc/ssh/sshd_config
        src: ../roles/common/files/etc/ssh/sshd_config
        owner: root
        group: root
        mode: '0600'
      notify: Reload SSH

  handlers:
    - name: Reload SSH
      service:
        name: "{{ 'ssh' if ansible_os_family == 'Debian' else 'sshd' }}"
        state: reloaded
