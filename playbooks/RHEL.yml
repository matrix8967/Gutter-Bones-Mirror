---
- name: "Initial Setup"
  hosts: [all]
  become: true
  gather_facts: true
  vars_files:
    - ../group_vars/rhel.yml

  vars_prompt:
    - name: "username"
      prompt: Desired username?
      private: false

    - name: "hostname"
      prompt: Desired hostname?
      private: false

  tasks:
    - name: Verify 'sudo' group
      ansible.builtin.group:
        name: sudo
        state: present

    - name: "Create User"
      ansible.builtin.user:
        name: "{{ username }}"
        state: present
        groups: sudo
        append: true
        create_home: true
        shell: /usr/bin/zsh
      tags:
        - user

    - name: "Print message"
      ansible.builtin.debug:
        msg: "Setting hostname to: {{ hostname }}"

    - name: "Set a hostname"
      ansible.builtin.hostname:
        name: "{{ hostname }}"
      tags:
        - hostname

    - name: "Upgrade RHEL Family OS packages"
      ansible.legacy.dnf:
        name: "*"
        state: latest
      when: ansible_os_family == "RedHat"

    - name: "Install RHEL Packages"
      ansible.legacy.dnf:
        name: "{{ dnf_packages }}"
        state: "latest"

    - name: "Check if a reboot is needed."
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: "Reboot the server if needed"
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible because of reboot required file."
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami
      when: reboot_required.stat.exists

    - name: "Copy Dotfiles"
      ansible.builtin.fetch.copy:
        dest: /home/{{ username }}/
        src: ../roles/common/files/home/
        owner: "{{ username }}"
        group: "{{ username }}"
      tags:
        - dots

    - name: "Delete MOTD"
      ansible.builtin.file:
        path: /etc/update-motd.d/
        state: absent

    - name: "Create MOTD"
      ansible.builtin.file:
        path: /etc/update-motd.d/
        state: directory
        owner: root
        group: root

    - name: "Setup new motd"
      ansible.builtin.fetch.copy:
        dest: /etc/update-motd.d/10-motd
        src: ../roles/common/files/etc/update-motd.d/10-motd
        owner: root
        group: root
        mode: a+x

    - name: "Remove undesirable packages"
      ansible.legacy.dnf:
        name: "{{ unnecessary_software }}"
        state: absent
      ignore_errors: true

    - name: "Stop and disable unnecessary services"
      ansible.builtin.systemd.service:
        name: "{{ item }}"
        state: stopped
        enabled: false
      with_items: "{{ unnecessary_services }}"
      ignore_errors: true

    - name: "Enable ports on the list"
      ansible.posix.firewalld:
        zone: public
        port: "{{ item.port }}"
        permanent: true
        state: "{{ item.state }}"
      loop: "{{ port_list }}"
      notify:
        - Restart firewalld

    - name: "SSH Key Exchange"
      ansible.posix.authorized_key:
        user: "{{ username }}"
        state: present
        key: "{{ copy_pub_key }}"

    - name: "Add hardened SSH config"
      ansible.builtin.fetch.copy:
        dest: /etc/ssh/sshd_config
        src: ../roles/common/files/etc/ssh/sshd_config
        owner: root
        group: root
        mode: "0600"
      notify: Reload SSH

  handlers:
    - name: "Reload SSH"
      ansible.builtin.systemd.service:
        name: sshd
        state: reloaded

    - name: "Restart firewalld"
      ansible.builtin.systemd.service:
        name: firewalld
        state: restarted
